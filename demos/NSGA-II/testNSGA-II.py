from NSGAII import *


initial_population = {}

for i in range(-5, 6):
	initial_population["%s" % i] = [3 * i, 3 * i]
		
print nsgaii(initial_population)

# the chromosomes are the 99 randomDBN experiments
# the three objectives, in order, are the total time, best validation score, and best test performance
experiment_data = {1: [97.0556096872, 1.36, 1.35], 2: [673.313472934, 3.25, 3.51], 3: [692.132532167, 2.11, 2.41], 4: [335.7538712506, 2.95, 3.25], 5: [2260.548634562, 3.29, 3.88], 6: [11.155794346330001, 1.69, 1.64], 7: [24.63379095394, 2.03, 2.15], 8: [409.6240564503, 1.56, 1.56], 9: [898.810324367, 3.39, 3.86], 10: [172.4582550844, 1.81, 1.84], 11: [600.1252539, 2.45, 2.44], 12: [46.217430265741996, 3.8, 3.94], 13: [651.1600640341001, 1.63, 1.44], 14: [67.2122956832, 3.48, 3.93], 15: [24.7623200337, 7.22, 7.56], 16: [79.8420417031, 2.4, 2.74], 17: [11.28336408138, 1.44, 1.52], 18: [402.092222249, 6.95, 7.45], 19: [134.94431340343002, 1.58, 1.94], 20: [111.6448272665, 2.58, 2.83], 21: [26.153356035599998, 7.41, 7.95], 22: [9.51161143383, 5.34, 5.8], 23: [85.73795069849999, 1.42, 1.49], 24: [98.0892743309, 2.72, 2.99], 25: [9.827868747707, 7.87, 7.94], 26: [26.291139551039997, 2.27, 2.32], 27: [4.919632351395, 2.24, 2.45], 28: [33.3956192493, 2.42, 2.51], 29: [30.1249961178, 6.0, 6.29], 30: [40.366883115, 7.57, 7.92], 31: [6.745760913690001, 1.46, 1.69], 32: [37.1334197839, 14.47, 15.27], 33: [70.68342299860001, 2.01, 2.12], 34: [29.7249544382, 3.23, 3.63], 35: [43.2995401502, 2.21, 2.15], 36: [23.861796232000003, 2.05, 2.1], 37: [28.03271466896, 3.96, 4.33], 38: [14.08451858363, 1.62, 1.61], 39: [19.57215631801, 7.09, 7.37], 40: [22.41226629811, 6.69, 7.32], 41: [28.5279988329, 1.34, 1.41], 42: [70.9185322364, 2.89, 3.31], 43: [32.5652491847, 1.3, 1.35], 44: [30.21138341423, 4.21, 4.53], 45: [46.4234406153, 5.55, 6.55], 46: [18.26159963612, 2.64, 2.88], 47: [24.30480483373, 5.86, 6.17], 48: [14.65161636671, 1.35, 1.23], 49: [62.63875111739, 1.35, 1.32], 50: [8.075368984539999, 1.36, 1.51], 51: [80.6095053672, 6.61, 7.32], 52: [34.100238247680004, 2.01, 2.01], 53: [21.59578280047, 3.44, 4.07], 54: [48.544654281899994, 9.3, 10.34], 55: [11.537434899800001, 1.29, 1.42], 56: [16.09890386663, 1.95, 2.22], 57: [24.5347844203, 5.69, 6.05], 58: [210.7807526505, 4.33, 4.85], 59: [7.02981651624, 1.6, 1.77], 60: [79.32228827084, 3.71, 4.09], 61: [7.632055799170001, 3.86, 4.45], 62: [40.34848696389, 1.62, 1.57], 63: [5.258120699722, 6.82, 6.97], 64: [259.732026033, 5.19, 5.9], 65: [6.23648835024, 3.04, 3.38], 66: [61.8007490873, 2.45, 2.73], 67: [47.7676234484, 2.55, 3.1], 68: [12.19665643376, 2.03, 2.03], 69: [3.786718181773, 6.74, 6.92], 70: [68.6198461453, 9.77, 10.35], 71: [92.70950179891, 1.54, 1.49], 72: [76.7373666684, 4.0, 4.33], 73: [144.0945613305, 3.45, 3.71], 74: [29.16592758494, 3.83, 4.14], 75: [44.7489674171, 1.54, 1.55], 76: [14.010271716120002, 3.76, 4.24], 77: [7.72991123597, 1.68, 1.66], 78: [54.9378365477, 1.71, 1.78], 79: [264.86362068290003, 5.94, 6.13], 80: [6.06724348465, 2.32, 2.34], 81: [64.36818371221, 1.81, 1.9], 82: [104.89610723232, 6.39, 7.03], 83: [49.2012576858, 1.44, 1.65], 84: [45.4720013658, 6.73, 7.09], 85: [199.0098458136, 3.69, 4.34], 86: [87.636128219, 4.15, 4.64], 87: [119.5288446705, 11.56, 11.92], 88: [76.9551467459, 2.47, 2.54], 89: [24.7237137516, 8.64, 9.08], 90: [14.72097647985, 3.86, 4.26], 91: [26.13976425325, 4.28, 4.95], 92: [2.421142701305, 3.44, 3.94], 93: [23.78380421801, 3.27, 3.69], 94: [164.84611951899998, 2.75, 3.02], 95: [27.42196133132, 4.34, 4.49], 96: [11.95830045147, 2.57, 2.55], 97: [3.773401848477, 1.95, 1.92], 98: [63.5184076706, 2.03, 2.01], 99: [48.1037550847, 4.41, 4.55]}

print fast_nondominated_sort(experiment_data)

print crowding_distance(experiment_data)