[11:13:59 AM] americajin: import pyopencl.array as pycl_array  # Import PyOpenCL Array (a Numpy array plus an OpenCL buffer object)
[11:14:30 AM] americajin: can use this create buffers
[11:17:44 AM] americajin: yes hold on
[11:18:09 AM] americajin: input buffer: a = pycl_array.to_device(queue, np.random.rand(50000).astype(np.float32))
[11:18:40 AM] americajin: output buffer is simple: c = pycl_array.empty_like(angel)
[11:18:44 AM] americajin: sorry
[11:18:48 AM] americajin: c = pycl_array.empty_like( a )
[11:19:18 AM] americajin: yes
[11:19:40 AM] americajin: there is a class in pyopencl for this, yes

*We all did linear combo

*Dave:
uniform rand
elementwise matmul

*Reuben:
bernoulli rand
normal rand

*Gus:
sigmoid
tanh
log

*James:
Matmul
inner product

1. go to cifar-ten
2. create new branch (git checkout -b newbranch)
3. work
4. (git add .)
5. (git commit)
6. commit message should be a sentence in imperative mood describing the feature (no period)
7. checkout master again (git checkout master)
8. check for changes while working (git pull)
9. (git checkout newbranch)
10. (git rebase master)
11. (git checkout master)
12. (git merge newbranch)
13. (git push)
14. erase newbranch (git branch -d newbranch)



